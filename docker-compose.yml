services:
  # Contenedor de la BBDD
  mysql:
    image: mysql:8
    container_name: mysql
    env_file:
      docker.env
    mem_limit: 512m
    ports:
      - "3306:3306"
    networks:
      - dentalius
    volumes:
      # Volumenes montados o vinculados:  (Con este, se enlaza a un directorio especifico del proyecto)
      - ./dentalium.sql:/docker-entrypoint-initdb.d/dentalium.sql # La primera vez que se ejecuta la imagen de mysql, se ejecuta este script
      #./data/mysql:/var/lib/mysql
      # Volumenes nombrados (Con este, Docker gestiona la ubicacion f√≠sica y lo guarda en sus rutas internas. Solo se puede ver desde el volumen de Docker)
      - mysql_data:/var/lib/mysql
#    restart: always

  # Contenedor del backend
  backend:
    build:
      context: ./back/dentalium
      dockerfile: Dockerfile
    container_name: dentalium-backend
    ports:
      - "8080:8080"
    env_file:
      docker.env
    networks:
      - dentalius
      - romoreno
    volumes:
      - ./documents:/app/documents/
    restart: on-failure
    depends_on:
      - mysql

# Contenedor del frontend
  frontend:
    build:
      context: ./front/dentalium
      dockerfile: Dockerfile
    container_name: dentalium-frontend
    ports:
      - "8081:80"
    networks:
      - dentalius
      - romoreno
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

networks:
  # Por defecto bridge, permite acceso desde la misma red ademas de localhost
  dentalius:
  romoreno:
    external: true

volumes:
  mysql_data: